{"version":3,"sources":["components/LikeButton.js","components/Pictures.js","App.js","reportWebVitals.js","index.js"],"names":["LikeButton","handleClick","event","setState","liked","state","status","this","onClick","React","Component","apiKey","process","REACT_APP_NASA_API_KEY","Pictures","data","fetch","then","response","ok","Error","json","catch","err","message","photos","map","picture","src","img_src","alt","rover","name","camera","full_name","earth_date","id","App","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+OA4BeA,E,kDAzBb,aAAc,IAAD,8BACX,gBAMFC,YAAc,SAACC,GACb,EAAKC,SAAS,CACZC,OAAQ,EAAKC,MAAMD,SAPrB,EAAKC,MAAQ,CACXD,OAAO,GAHE,E,0CAeb,WACE,IAAME,EAASC,KAAKF,MAAMD,MAAQ,SAAW,OAC7C,OACA,8BACE,wBAAQI,QAASD,KAAKN,YAAtB,SAAoCK,U,GApBjBG,IAAMC,WCCzBC,EAASC,iJAAYC,uBAmDZC,E,kDA/Cb,aAAc,IAAD,8BACX,gBACKT,MAAQ,CACXU,KAAM,IAHG,E,qDAOb,WAAoB,IAAD,OACjBC,MAAM,gGAAD,OAAiGL,IACnGM,MAAK,SAAAC,GACJ,IAAKA,EAASC,GACZ,MAAMC,MAAM,+BAEd,OAAOF,EAASG,OACjBJ,MAAK,SAAAF,GACJ,EAAKZ,SAAS,CAACY,KAAMA,OAEtBO,OAAM,SAAAC,GACL,MAAMH,MAAMG,EAAIC,iB,oBAKtB,WAEE,OACE,gCAEE,qFACCjB,KAAKF,MAAMU,KAAKU,QAAUlB,KAAKF,MAAMU,KAAKU,OAAOC,KAAI,SAAAC,GAAO,OAC3D,oCACE,qBACEC,IAAKD,EAAQE,QACbC,IAAI,QAIN,uCAAUH,EAAQI,MAAMC,KAAxB,MAAiCL,EAAQM,OAAOC,UAAhD,OACA,mCAAMP,EAAQQ,WAAd,OACA,cAAC,EAAD,MATYR,EAAQS,c,GAhCT3B,IAAMC,W,MCOd2B,MATf,WACE,OACE,sBAAKC,UAAU,MAAf,UACE,iDACA,cAAC,EAAD,QCKSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBxB,MAAK,YAAkD,IAA/CyB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.b0ba53ee.chunk.js","sourcesContent":["import React from 'react';\n\nclass LikeButton extends React.Component {\n  constructor(){\n    super()\n    this.state = {\n      liked: false\n    };\n  }\n\n  handleClick = (event) => {\n    this.setState({\n      liked: !this.state.liked\n    });\n  };\n\n\n\n  render(){\n    const status = this.state.liked ? 'Unlike' : 'Like'\n    return(\n    <div>\n      <button onClick={this.handleClick}>{status}</button>\n    </div>\n  )\n  }\n}\n\nexport default LikeButton;\n","import React from 'react';\nimport LikeButton from './LikeButton';\n\nconst apiKey = process.env.REACT_APP_NASA_API_KEY;\n\nclass Pictures extends React.Component {\n\n  constructor(){\n    super();\n    this.state = {\n      data: []\n    }\n  }\n\n  componentDidMount(){\n    fetch(`https://api.nasa.gov/mars-photos/api/v1/rovers/curiosity/photos?earth_date=2021-7-27&api_key=${apiKey}`)\n      .then(response => {\n        if (!response.ok) {\n          throw Error(\"Error fetching the pictures\")\n        }\n        return response.json()\n      .then(data => {\n        this.setState({data: data});\n      })\n      .catch(err => {\n        throw Error(err.message);\n      });\n    });\n  }\n\n  render(){\n\n    return (\n      <div>\n\n        <p>\"Curiosity Rover Pictures Taken On My 30th Birthday\"</p>\n        {this.state.data.photos && this.state.data.photos.map(picture =>\n          <article key={picture.id}>\n            <img\n              src={picture.img_src}\n              alt=\"N/A\"\n\n            />\n\n            <header> {picture.rover.name} - {picture.camera.full_name} </header>\n            <h4> {picture.earth_date} </h4>\n            <LikeButton/>\n          </ article>)}\n\n      </div>\n    )\n  }\n}\n\nexport default Pictures;\n","import Pictures from './components/Pictures';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>\"Spacestragram\"</h1>\n      <Pictures/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}